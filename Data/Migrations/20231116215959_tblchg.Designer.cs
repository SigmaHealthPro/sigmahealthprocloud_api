// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231116215959_tblchg")]
    partial class tblchg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Juridictions_organization_association", b =>
                {
                    b.Property<int>("jurd_org_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("jurd_org_id"));

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("jurisdiction_id")
                        .HasColumnType("integer");

                    b.Property<int>("jurisdictionsjurisdiction_id")
                        .HasColumnType("integer");

                    b.Property<int>("organization_id")
                        .HasColumnType("integer");

                    b.Property<int>("organizationsorganization_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.HasKey("jurd_org_id");

                    b.HasIndex("jurisdictionsjurisdiction_id");

                    b.HasIndex("organizationsorganization_id");

                    b.ToTable("jurd_org_ass");
                });

            modelBuilder.Entity("Data.Models.cities", b =>
                {
                    b.Property<int>("city_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("city_id"));

                    b.Property<int>("Countiescounty_id")
                        .HasColumnType("integer");

                    b.Property<string>("city_name")
                        .HasColumnType("text");

                    b.Property<int>("county_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("state_id")
                        .HasColumnType("integer");

                    b.Property<int>("statesstate_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.Property<int?>("zipcode")
                        .HasColumnType("integer");

                    b.HasKey("city_id");

                    b.HasIndex("Countiescounty_id");

                    b.HasIndex("statesstate_id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("Data.Models.counties", b =>
                {
                    b.Property<int>("county_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("county_id"));

                    b.Property<int>("county_code")
                        .HasColumnType("integer");

                    b.Property<string>("county_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("state_id")
                        .HasColumnType("integer");

                    b.Property<int>("statesstate_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.HasKey("county_id");

                    b.HasIndex("statesstate_id");

                    b.ToTable("counties");
                });

            modelBuilder.Entity("Data.Models.countries", b =>
                {
                    b.Property<int>("country_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("country_id"));

                    b.Property<string>("country_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.Property<int>("zipcode")
                        .HasColumnType("integer");

                    b.HasKey("country_id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Data.Models.facilities", b =>
                {
                    b.Property<int>("facility_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("facility_id"));

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<string>("facility_name")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("jur_ord_id")
                        .HasColumnType("integer");

                    b.Property<int>("jurd_org_assjurd_org_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.HasKey("facility_id");

                    b.HasIndex("jurd_org_assjurd_org_id");

                    b.ToTable("facilities");
                });

            modelBuilder.Entity("Data.Models.jurisdictions", b =>
                {
                    b.Property<int>("jurisdiction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("jurisdiction_id"));

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("jurisdiction_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.Property<int>("zipcode")
                        .HasColumnType("integer");

                    b.HasKey("jurisdiction_id");

                    b.ToTable("jurisdictions");
                });

            modelBuilder.Entity("Data.Models.organizations", b =>
                {
                    b.Property<int>("organization_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("organization_id"));

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("organization_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.HasKey("organization_id");

                    b.ToTable("organizations");
                });

            modelBuilder.Entity("Data.Models.states", b =>
                {
                    b.Property<int>("state_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("state_id"));

                    b.Property<int>("country_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<int>("fk_country_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("state_code")
                        .HasColumnType("integer");

                    b.Property<string>("state_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.Property<int>("zipcode")
                        .HasColumnType("integer");

                    b.HasKey("state_id");

                    b.HasIndex("country_id");

                    b.ToTable("states");
                });

            modelBuilder.Entity("Data.Models.user_types", b =>
                {
                    b.Property<int>("user_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_type_id"));

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.Property<string>("user_types_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_type_id");

                    b.ToTable("user_types");
                });

            modelBuilder.Entity("Data.Models.users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<int>("citiescity_id")
                        .HasColumnType("integer");

                    b.Property<int>("city_id")
                        .HasColumnType("integer");

                    b.Property<int>("countiescounty_id")
                        .HasColumnType("integer");

                    b.Property<int>("county_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("createdby")
                        .HasColumnType("text");

                    b.Property<int>("facilitiesfacility_id")
                        .HasColumnType("integer");

                    b.Property<int>("facility_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("updatedby")
                        .HasColumnType("text");

                    b.Property<int>("user_type_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_typesuser_type_id")
                        .HasColumnType("integer");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.HasIndex("citiescity_id");

                    b.HasIndex("countiescounty_id");

                    b.HasIndex("facilitiesfacility_id");

                    b.HasIndex("user_typesuser_type_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Data.Models.Juridictions_organization_association", b =>
                {
                    b.HasOne("Data.Models.jurisdictions", "jurisdictions")
                        .WithMany()
                        .HasForeignKey("jurisdictionsjurisdiction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.organizations", "organizations")
                        .WithMany()
                        .HasForeignKey("organizationsorganization_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jurisdictions");

                    b.Navigation("organizations");
                });

            modelBuilder.Entity("Data.Models.cities", b =>
                {
                    b.HasOne("Data.Models.counties", "Counties")
                        .WithMany()
                        .HasForeignKey("Countiescounty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.states", "states")
                        .WithMany()
                        .HasForeignKey("statesstate_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Counties");

                    b.Navigation("states");
                });

            modelBuilder.Entity("Data.Models.counties", b =>
                {
                    b.HasOne("Data.Models.states", "states")
                        .WithMany()
                        .HasForeignKey("statesstate_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("states");
                });

            modelBuilder.Entity("Data.Models.facilities", b =>
                {
                    b.HasOne("Data.Models.Juridictions_organization_association", "jurd_org_ass")
                        .WithMany()
                        .HasForeignKey("jurd_org_assjurd_org_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jurd_org_ass");
                });

            modelBuilder.Entity("Data.Models.states", b =>
                {
                    b.HasOne("Data.Models.countries", "country")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("Data.Models.users", b =>
                {
                    b.HasOne("Data.Models.cities", "cities")
                        .WithMany()
                        .HasForeignKey("citiescity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.counties", "counties")
                        .WithMany()
                        .HasForeignKey("countiescounty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.facilities", "facilities")
                        .WithMany()
                        .HasForeignKey("facilitiesfacility_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.user_types", "user_types")
                        .WithMany()
                        .HasForeignKey("user_typesuser_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cities");

                    b.Navigation("counties");

                    b.Navigation("facilities");

                    b.Navigation("user_types");
                });
#pragma warning restore 612, 618
        }
    }
}
