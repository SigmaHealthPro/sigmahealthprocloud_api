// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231120024902_NewStructureEntitiesAdded")]
    partial class NewStructureEntitiesAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Addresses", b =>
                {
                    b.Property<int>("address_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("address_id"));

                    b.Property<string>("Suite")
                        .HasColumnType("text");

                    b.Property<int>("country_id")
                        .HasColumnType("integer");

                    b.Property<int>("county_id")
                        .HasColumnType("integer");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("line1")
                        .HasColumnType("text");

                    b.Property<string>("line2")
                        .HasColumnType("text");

                    b.Property<int>("state_id")
                        .HasColumnType("integer");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("address_id");

                    b.HasIndex("country_id");

                    b.HasIndex("county_id");

                    b.HasIndex("state_id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Data.Models.Cities", b =>
                {
                    b.Property<int>("city_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("city_id"));

                    b.Property<string>("city_name")
                        .HasColumnType("text");

                    b.Property<int>("county_id")
                        .HasColumnType("integer");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("state_id")
                        .HasColumnType("integer");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("zipcode")
                        .HasColumnType("integer");

                    b.HasKey("city_id");

                    b.HasIndex("county_id");

                    b.HasIndex("state_id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Data.Models.Contacts", b =>
                {
                    b.Property<int>("contact_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("contact_id"));

                    b.Property<int>("contact_type_id")
                        .HasColumnType("integer");

                    b.Property<string>("contact_value")
                        .HasColumnType("text");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("contact_id");

                    b.HasIndex("contact_type_id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Data.Models.Contacts_Type", b =>
                {
                    b.Property<int>("contact_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("contact_type_id"));

                    b.Property<string>("cell")
                        .HasColumnType("text");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("contact_type_id");

                    b.ToTable("Contacts_Types");
                });

            modelBuilder.Entity("Data.Models.Counties", b =>
                {
                    b.Property<int>("county_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("county_id"));

                    b.Property<int>("county_code")
                        .HasColumnType("integer");

                    b.Property<string>("county_name")
                        .HasColumnType("text");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("state_id")
                        .HasColumnType("integer");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("county_id");

                    b.HasIndex("state_id");

                    b.ToTable("counties");
                });

            modelBuilder.Entity("Data.Models.Countries", b =>
                {
                    b.Property<int>("country_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("country_id"));

                    b.Property<string>("country_name")
                        .HasColumnType("text");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("country_id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Data.Models.Facilities", b =>
                {
                    b.Property<int>("facility_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("facility_id"));

                    b.Property<string>("administered_at_location")
                        .HasColumnType("text");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("facility_name")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("juridictions_organization_id")
                        .HasColumnType("integer");

                    b.Property<string>("responsible_organization")
                        .HasColumnType("text");

                    b.Property<string>("sending_organization")
                        .HasColumnType("text");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("facility_id");

                    b.HasIndex("juridictions_organization_id");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Data.Models.Juridictions_organization_association", b =>
                {
                    b.Property<int>("juridictions_organization_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("juridictions_organization_id"));

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("jurisdiction_id")
                        .HasColumnType("integer");

                    b.Property<int>("organization_id")
                        .HasColumnType("integer");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("juridictions_organization_id");

                    b.HasIndex("jurisdiction_id");

                    b.HasIndex("organization_id");

                    b.ToTable("Juridictions_organization_association");
                });

            modelBuilder.Entity("Data.Models.Jurisdictions", b =>
                {
                    b.Property<int>("jurisdiction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("jurisdiction_id"));

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("jurisdiction_name")
                        .HasColumnType("text");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("zipcode")
                        .HasColumnType("integer");

                    b.HasKey("jurisdiction_id");

                    b.ToTable("jurisdictions");
                });

            modelBuilder.Entity("Data.Models.LOV_type_master", b =>
                {
                    b.Property<int>("reference_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("reference_id"));

                    b.Property<string>("LOV_type")
                        .HasColumnType("text");

                    b.Property<string>("key")
                        .HasColumnType("text");

                    b.Property<string>("value")
                        .HasColumnType("text");

                    b.HasKey("reference_id");

                    b.ToTable("LOV_type_master");
                });

            modelBuilder.Entity("Data.Models.Organizations", b =>
                {
                    b.Property<int>("organization_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("organization_id"));

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("organization_name")
                        .HasColumnType("text");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("organization_id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Data.Models.States", b =>
                {
                    b.Property<int>("state_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("state_id"));

                    b.Property<int>("country_id")
                        .HasColumnType("integer");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<int>("state_code")
                        .HasColumnType("integer");

                    b.Property<string>("state_name")
                        .HasColumnType("text");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("state_id");

                    b.HasIndex("country_id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Data.Models.User_Types", b =>
                {
                    b.Property<int>("user_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_type_id"));

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("user_types_name")
                        .HasColumnType("text");

                    b.HasKey("user_type_id");

                    b.ToTable("User_Types");
                });

            modelBuilder.Entity("Data.Models.Users", b =>
                {
                    b.Property<int>("users_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("users_id"));

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("designation")
                        .HasColumnType("text");

                    b.Property<Guid>("id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("user_firstname")
                        .HasColumnType("text");

                    b.Property<string>("user_lasttname")
                        .HasColumnType("text");

                    b.Property<int>("user_type_id")
                        .HasColumnType("integer");

                    b.HasKey("users_id");

                    b.HasIndex("user_type_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Addresses", b =>
                {
                    b.HasOne("Data.Models.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Counties", "Counties")
                        .WithMany()
                        .HasForeignKey("county_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("state_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Counties");

                    b.Navigation("Countries");

                    b.Navigation("States");
                });

            modelBuilder.Entity("Data.Models.Cities", b =>
                {
                    b.HasOne("Data.Models.Counties", "fk_county")
                        .WithMany()
                        .HasForeignKey("county_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.States", "fk_state")
                        .WithMany()
                        .HasForeignKey("state_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fk_county");

                    b.Navigation("fk_state");
                });

            modelBuilder.Entity("Data.Models.Contacts", b =>
                {
                    b.HasOne("Data.Models.Contacts_Type", "Contacts_Type")
                        .WithMany()
                        .HasForeignKey("contact_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacts_Type");
                });

            modelBuilder.Entity("Data.Models.Counties", b =>
                {
                    b.HasOne("Data.Models.States", "State")
                        .WithMany()
                        .HasForeignKey("state_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("Data.Models.Facilities", b =>
                {
                    b.HasOne("Data.Models.Juridictions_organization_association", "jurd_org_ass")
                        .WithMany()
                        .HasForeignKey("juridictions_organization_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jurd_org_ass");
                });

            modelBuilder.Entity("Data.Models.Juridictions_organization_association", b =>
                {
                    b.HasOne("Data.Models.Jurisdictions", "jurisdictions")
                        .WithMany()
                        .HasForeignKey("jurisdiction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Organizations", "organizations")
                        .WithMany()
                        .HasForeignKey("organization_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jurisdictions");

                    b.Navigation("organizations");
                });

            modelBuilder.Entity("Data.Models.States", b =>
                {
                    b.HasOne("Data.Models.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Data.Models.Users", b =>
                {
                    b.HasOne("Data.Models.User_Types", "user_types")
                        .WithMany()
                        .HasForeignKey("user_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user_types");
                });
#pragma warning restore 612, 618
        }
    }
}
